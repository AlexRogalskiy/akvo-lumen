apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: lumen-citest-cleanup
spec:
  schedule: "0 0 * * *"
  startingDeadlineSeconds: 600
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      labels:
        cronjob: lumen-citest-cleanup
    spec:
      backoffLimit: 3
      activeDeadlineSeconds: 900
      template:
        metadata:
          labels:
            cronjob: lumen-citest-cleanup
        spec:
          containers:
          - name: pg-client
            image: postgres:11-alpine
            command: ["/bin/sh", "-c"]
            args:
              - |
                export PGPORT=5432
                export PGHOST="$(echo "$LUMEN_DB_URL" | sed -n 's|.*postgresql://\(.*\):.*|\1|p')"
                export PGUSER="$(echo "$LUMEN_DB_URL" | sed -n 's|.*user=\(.*\)&password.*|\1|p')"
                export PGPASSWORD="$(echo "$LUMEN_DB_URL" | sed -n 's|.*password=\(.*\)&.*|\1|p')"
                export PGSSLMODE=prefer
                export PGDATABASE=tenant_lumencitest
                sleep 10
                psql -c "DELETE FROM dataset"
            resources:
              requests:
                cpu: "50m"
                memory: "256Mi"
              limits:
                cpu: "1000m"
                memory: "256Mi"
            env:
            - name: LUMEN_DB_URL
              valueFrom:
                secretKeyRef:
                  name: lumen
                  key: lumen_db_url
          - name: cloudsql-proxy
            image: eu.gcr.io/cloudsql-docker/gce-proxy:1.16
            command: ["/cloud_sql_proxy",
                      "-instances=akvo-lumen:europe-west1:$(GOOGLE_SQL_DB_INSTANCE)=tcp:5432",
                      "-credential_file=/secrets/cloudsql/credentials.json"]
            securityContext:
              runAsUser: 2  # non-root user
              allowPrivilegeEscalation: false
            env:
              - name: GOOGLE_SQL_DB_INSTANCE
                valueFrom:
                  configMapKeyRef:
                    name: akvo-lumen
                    key: google-sql-db-instance
            volumeMounts:
              - name: "secret-config"
                mountPath: "/secrets/cloudsql/credentials.json"
                subPath: "cloud-database-service-account.json"
                readOnly: true
          restartPolicy: Never
          volumes:
            - name: "secret-config"
              secret:
                secretName: "lumen"